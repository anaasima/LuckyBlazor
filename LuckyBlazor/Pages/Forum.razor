@page "/Forum"
@inject IForumService ForumService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@using LuckyBlazor.Model.Forum
@using LuckyBlazor.Data.ForumService
@using LuckyBlazor.Model
@using LuckyBlazor.Authentication
<h3>Forum</h3>
<div class="container-fluid">
    <div class="row">
        <div class="col-12 d-flex justify-content-center">
            <input id="postContent" type="text" placeholder="Post something..." @bind-value="_postContent">
        </div>
        </div>
<div class="row">
    <div class="col-3">
        <input type="submit" value="Submit" @onclick="postOnForum">
    </div>
    </div>
    @foreach (var variable in _posts)
    {
        <div class="row">
            <div class="col-3">
                <a href="" @onclick="@(() => GoToUserProfile(@variable.Username))">@variable.Username</a>
            </div>
        </div>
        <div class="row" id="comments">
            <div class="col-12">
                <p>@variable.Content</p>
            </div>
        </div>
        <div class="row" id="seeComments">
            <div class="col-4">
                <a href="">See comments</a>
            </div>
        </div>
    }
</div>
@code {
    private IList<Post> _posts = new List<Post>();
    private string _postContent;
    private Account _account = new Account();

    protected override async Task OnInitializedAsync()
    {
        _account = ((CustomAuthenticationStateProvider) AuthenticationStateProvider).CachedUser;
        _posts = await ForumService.GetAllPosts();
        // for (int i = 0; i < _postList.Size(); i++)
        // {
        //     _posts.Add(_postList.GetPost(i));
        // }
    }

    public void GoToUserProfile(string username)
    {
        NavigationManager.NavigateTo("/UserProfile/" + username);
    }

    public void postOnForum()
    {
        Post post = new Post(_postContent, _account.UserId);
        ForumService.CreatePost(post);
        _postContent = "";
    }
}