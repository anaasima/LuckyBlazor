@page "/PostPage/{Id}"
@using LuckyBlazor.Data.ForumService
@using LuckyBlazor.Model
@using LuckyBlazor.Model.Forum
@using LuckyBlazor.Authentication
@using LuckyBlazor.Model.Forum.Report
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IForumService ForumService
@inject NavigationManager NavigationManager
@if (_post.CommentList == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else if (!_post.CommentList.Any())
{
    <div class="container-fluid">
        <div class="row">
            <div class="col-2">
                <a href="" @onclick="@(() => GoToUserProfile(_post.Username))">@String.Concat("@")@_post.Username</a>
            </div>
        </div>
        <div class="row" id="comments">
            <div class="col-12">
                <p>@_post.Content</p>
            </div>
        </div>
        <div class="row">
            <div class="col-11 d-flex justify-content-center">
                <input id="postContent" type="text" placeholder="Comment something..." @bind-value="_content">
            </div>
            <div class="col-1 d-flex justify-content-center align-items-center">
                <button class="buttons" @onclick="createComment">Post</button>
            </div>
        </div>
    </div>
}
else
{
    <div class="container-fluid">
        <div class="row">
            <div class="col-2">
                <a href="" @onclick="@(() => GoToUserProfile(_post.Username))">@String.Concat("@")@_post.Username</a>
                <button class="forumButtons" id="reportButton" @onclick="@(() => reportPost(_post.PostId))">
                    <i class="oi oi-warning" style="color: #555555"></i>
                </button>
                <button class="forumButtons" @onclick="@(() => savePost(_post))">
                    <i class="oi oi-data-transfer-download" style="color: #555555"></i>
                </button>
            </div>
        </div>
        <div class="row" id="comments">
            <div class="col-12">
                <p>@_post.Content</p>
            </div>
        </div>
        <div class="row">
            <div class="col-11 d-flex justify-content-center">
                <input id="postContent" type="text" placeholder="Comment something..." @bind-value="_content">
            </div>
            <div class="col-1 d-flex justify-content-center align-items-center">
                <button class="buttons" @onclick="createComment">Post</button>
            </div>
        </div>

        @foreach (var variable in _post.CommentList)
        {
            <div class="row comments">
                <div class="col-3">@String.Concat("@username")</div>
            </div>
            <div class="row comments" id="divideCom">
                <div class="col-9">
                    <p>@variable.Content</p>
                </div>
            </div>
        }
    </div>
}

@code {
    private IList<Account> _listAcc = new List<Account>();
    private Account _account = new Account();
    private IList<Post> _list = new List<Post>();
    private string _content;
    private Post _post = new Post();

    [Parameter]
    public string Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _account = ((CustomAuthenticationStateProvider) AuthenticationStateProvider).CachedUser;
        _list = await ForumService.GetAllPosts();

        foreach (var VARIABLE in _list)
        {
            if (VARIABLE.PostId == Int32.Parse(Id))
            {
                _post = VARIABLE;
                break;
            }
        }
    }

    private void GoToUserProfile(string username)
    {
        NavigationManager.NavigateTo("/UserProfile/" + username);
    }

    public void createComment()
    {
        Comment newComment = new Comment(_content, _account.UserId, Int32.Parse(Id));
        ForumService.CreateComment(newComment);
    }

    private async Task reportPost(int postId)
    {
        Report newReport = new Report(_account.UserId, postId);
        await ForumService.ReportPost(newReport);
    }

    private async Task savePost(Post post)
    {
        await ForumService.SavePosts(post, _account.UserId);
    }

}