@page "/PostPage/{Id}"
@using LuckyBlazor.Data.ForumService
@using LuckyBlazor.Model
@using LuckyBlazor.Model.Forum
@using LuckyBlazor.Authentication
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IForumService ForumService
@inject NavigationManager NavigationManager
<div class="container-fluid">
    <div class="row">
        <div class="col-3">
            <a href="" @onclick="@(() => GoToUserProfile(_post.Username))">@_post.Username</a>
        </div>
    </div>
    <div class="row">
        <div class="col-9 d-flex justify-content-center">
            <input type="text" placeholder="Comment something..." @bind-value="_content">
        </div>
        <div class="col-3 d-flex justify-content-center">
            <input type="submit" value="Submit" @onclick="createComment">
        </div>
    </div>
    @foreach (var variable in _post.CommentList)
    {
        <div class="row" id="comments">
            <div class="col-12">
                <p>@variable.Content</p>
            </div>
        </div>
    }
</div>

@code {
    private Account _account;
    private IList<Post> _list;
    private string _content;
    private Post _post;

    [Parameter]
    public string Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _account = ((CustomAuthenticationStateProvider) AuthenticationStateProvider).CachedUser;
        _list = await ForumService.GetAllPosts();
        foreach (var VARIABLE in _list)
        {
            if (VARIABLE.PostId == Int32.Parse(Id))
            {
                _post = VARIABLE;
            }
        }
    }

    private void GoToUserProfile(string username)
    {
        NavigationManager.NavigateTo("/UserProfile/" + username);
    }

    public void createComment()
    {
        Comment newComment = new Comment(_content, _account.UserId);
        ForumService.CreateComment(newComment);
    }

}