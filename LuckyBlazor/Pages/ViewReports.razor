@page "/ViewReports"
@using LuckyBlazor.Data.ForumService
@using LuckyBlazor.Model
@using LuckyBlazor.Model.Forum.Report
@using LuckyBlazor.Authentication
@inject IForumService ForumService
@inject IAccountService AccountService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
<div class="container-fluid">
    <div class="row" id="reports">
        <div class="col-12 justify-content-center align-items-center">
            <h3>Reports</h3>
        </div>
    </div>
    <table style="text-align: center">
        <tbody>
        @foreach (var variable in _reports)
        {
            <tr>
                <td>Who reported: <a href="" @onclick="@(() => GoToUserProfile(variable.Username))">@String.Concat("@")@variable.Username</a></td>
                <td>Go to report: <a href="" @onclick="@(() => GoToPostPage(@variable.postId))">@variable.postId</a></td>
                <td><button class="forumButtons" @onclick="@(() => deleteReport(variable.id))">
                                            <i class="oi oi-trash" style="color: #555555"></i>
                                        </button></td>
            </tr>
        }
        </tbody>
    </table>
    
</div>


@code {
    private IList<Report> _reports = new List<Report>();
    private Account _account;
    // private string _username;
    [Parameter]
    public string Id { get; set; }
    [Parameter]
    public string username { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _account = ((CustomAuthenticationStateProvider) AuthenticationStateProvider).CachedUser;
        _reports = await ForumService.GetReports();
    }

    private async Task<string> getUserById(int id)
    {
        Account newAccount = new Account();
        newAccount = await AccountService.GetUserById(id);
        Console.WriteLine(newAccount.Username);
        return newAccount.Username;
    }
    
    private void GoToUserProfile(string Username)
    {
        username = Username;
        NavigationManager.NavigateTo("/UserProfile/" + username);
    }

    
    private void GoToPostPage(int postId)
    {
        Id = String.Concat(postId);
        NavigationManager.NavigateTo("/PostPage/" + Id);
    }

    private async Task deleteReport(int reportId)
    {
        await ForumService.DeleteReport(reportId);
        foreach (var VARIABLE in _reports)
        {
            if (VARIABLE.id == reportId)
            {
                _reports.Remove(VARIABLE);
                break;
            }
        }
    }

}