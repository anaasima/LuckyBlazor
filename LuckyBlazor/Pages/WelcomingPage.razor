@page "/Login"
@using LuckyBlazor.Authentication
@using LuckyBlazor.Model

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
<style>
.sidebar
{
display: none !important;
}
</style>
<AuthorizeView>
    <NotAuthorized>
        <div class="loginForm">
            <input type="text" placeholder="Username" @bind-value="_username">
        	<br>
            <input type="password" placeholder="Password" @bind-value="_password">
            <br>
            <div style="color:red">@_errorMessage</div>
            <br>
            <input type="submit" value="Login" @onclick="PerformLogin">
            <br>
            <div>
            <a href="" @onclick="GoToRegisterPage">Don't have an account? Click here to register!
            </a>
            <br>
            <a href="" @onclick="GoToViewComponents">Continue as guest
            </a>
            </div>
            </div>
    </NotAuthorized>
    <Authorized>
        <a href="" @onclick="PerformLogout">
            Log out
        </a>
    </Authorized>
</AuthorizeView>

@code
{
    private string _username;
    private string _password;
    private string _errorMessage;

    [Parameter]
    public string UserId { get; set; } 

    private async Task PerformLogin()
    {
        _errorMessage = "";
         try
         {
             Account account = await ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(new Account(_username, _password));
             UserId = String.Concat(account.UserId);
             _username = "";
             _password = "";
             NavigationManager.NavigateTo("/MyPage");
         }
         catch (Exception e)
         {
             _errorMessage = "Incorrect credentials";
         }
    }

    private void PerformLogout()
    {
        _errorMessage = "";
        _username = "";
        _password = "";
        try
        {
            ((CustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }

    private void GoToRegisterPage()
    {
        NavigationManager.NavigateTo("/RegisterAccount");
    }

    private void GoToViewComponents()
    {
        NavigationManager.NavigateTo("/ViewComponents");
    }
}